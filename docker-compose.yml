version: "3.5"

networks:
  local:
    driver: bridge

volumes:
  postgres:
  redis:

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: celluloid, keycloak
    volumes:
      - ./.data:/var/lib/postgresql/data
      - ./scripts/pg-init-scripts.sh:/docker-entrypoint-initdb.d/init.sh
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d celluloid"
    networks:
      - local

  dbbackups:
    image: kartoza/pg-backup:13.0
    volumes:
      - ./.backups:/backups
    environment:
      - DUMPPREFIX=PG
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=5432
      - DBLIST=celluloid
      - ARCHIVE_FILENAME=latest
      - TARGET_ARCHIVE=/backups/latest.celluloid.dmp
      - TARGET_DB=celluloid
      #- CRON_SCHEDULE="*/5 * * * *"
      #- DB_DUMP_ENCRYPTION=true
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local

  # keycloak:
  #   image: quay.io/phasetwo/phasetwo-keycloak:20.0.1-alpha
  #   ports:
  #     - 8080:8080
  #   environment:
  #     KC_DB: postgres
  #     KC_DB_URL_HOST: postgres
  #     KC_DB_USERNAME: ${POSTGRES_USER}
  #     KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
  #     KC_DB_URL_DATABASE: keycloak
  #     KEYCLOAK_ADMIN: admin
  #     KEYCLOAK_ADMIN_PASSWORD: admin
  #     KC_HOSTNAME_STRICT: false
  #     KC_HEALTH_ENABLED: true
  #     KC_PROXY: edge
  #     KC_FEATURES:
  #       authorization
  #       token-exchange
  #       docker
  #       impersonation
  #       scripts
  #       upload-scripts
  #       web-authn
  #       client-policies
  #       dynamic-scopes
  #   depends_on:
  #     - postgres
  #   command: start
  #   networks:
  #     - local

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis:/redis:/data
    networks:
      - local
